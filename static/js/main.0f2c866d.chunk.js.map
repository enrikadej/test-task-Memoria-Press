{"version":3,"sources":["store/actions.ts","components/ButtonArrow/ButtonArrow.tsx","components/Header/MainHeader/MainHeader.tsx","components/Header/SubHeader/SubHeader.tsx","components/Header/Header.tsx","API/api.ts","components/Main/HeaderTable/HeaderTable.tsx","store/selectors.ts","components/Main/Table/StudentInfo/StudentInfo.tsx","components/ButtonArrowUpDown/ButtonArrowUpDown.tsx","components/Main/Table/Table.tsx","components/Main/Main.tsx","App.tsx","store/index.ts","index.tsx"],"names":["ActionType","ButtonArrow","color","type","className","width","height","viewBox","fill","xmlns","d","MainHeader","src","alt","SubHeader","Header","URL","getStudents","page","size","fetch","response","console","log","json","getSortStudents","category","sortDir","getSearchStudents","search","SetStudentsActions","payload","SET_STUDENTS","setStudentActions","SET_STUDENTINFO","HeaderTable","useState","setSearch","dispatch","useDispatch","onSubmit","event","preventDefault","then","data","value","placeholder","onChange","target","getStudentsSelector","state","students","getStudentInfoSelector","studentInfo","StudentInfo","student","useSelector","name","id","ButtonArrowUpDown","Table","React","memo","openInfo","setOpenInfo","openedStudent","useEffect","sortingStudent","group","onClick","map","class","score","speed","parents","studentObject","colSpan","Main","App","initialState","store","createStore","action","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0f2c866d.chunk.js","sourcesContent":["import { Student } from '../react-app-env.d';\n\nexport type Action = SetStudentsAction | SetStudentInfoAction;\n\n// eslint-disable-next-line no-shadow\nexport enum ActionType {\n  SET_STUDENTS = 'SET_STUDENTS',\n  SET_STUDENTINFO = 'SET_STUDENTINFO',\n}\n\nexport interface SetStudentsAction {\n  type: ActionType.SET_STUDENTS,\n  payload: Student[],\n}\n\nexport interface SetStudentInfoAction {\n  type: ActionType.SET_STUDENTINFO,\n  payload: Student | null,\n}\n\nexport const SetStudentsActions = (payload: Student[]): SetStudentsAction => ({\n  type: ActionType.SET_STUDENTS,\n  payload,\n});\n\nexport const setStudentActions = (payload: Student | null): SetStudentInfoAction => ({\n  type: ActionType.SET_STUDENTINFO,\n  payload,\n});\n","import React from 'react';\nimport './ButtonArrow.scss';\n\ntype Props = {\n  color: string,\n};\n\nexport const ButtonArrow: React.FC<Props> = ({ color }) => (\n  <button\n    type=\"button\"\n    className=\"buttonArrow\"\n  >\n    <svg\n      width=\"10\"\n      height=\"5\"\n      viewBox=\"0 0 10 5\"\n      fill={color}\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M0 0L5 5L10 0H0Z\"\n        fill={color}\n      />\n    </svg>\n  </button>\n);\n","import React from 'react';\nimport './MainHeader.scss';\nimport { ButtonArrow } from '../../ButtonArrow';\n\nexport const MainHeader = () => {\n  return (\n    <div className=\"mainHeader\">\n      <div className=\"mainHeader__school\">\n        <span>School 1</span>\n        <ButtonArrow color=\"#777\" />\n      </div>\n      <div className=\"mainHeader__nav\">\n        <p>Analytics</p>\n        <p>Gradebooks</p>\n        <p>Tests</p>\n        <p>Students</p>\n        <p>Teachers</p>\n        <p>Archive</p>\n      </div>\n      <div className=\"mainHeader__profile\">\n        <img\n          src=\"photoProfile.jpg\"\n          alt=\"profile\"\n        />\n        <ButtonArrow color=\"#777\" />\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport { ButtonArrow } from '../../ButtonArrow';\nimport './SubHeader.scss';\n\nexport const SubHeader = () => {\n  return (\n    <div className=\"subheader\">\n      <p>\n        ShowAll\n        <ButtonArrow color=\"#C0C0C0\" />\n      </p>\n      <p>\n        All grades\n        <ButtonArrow color=\"#C0C0C0\" />\n      </p>\n      <p>\n        All classes\n        <ButtonArrow color=\"#C0C0C0\" />\n      </p>\n      <p>\n        Av. Score\n        <ButtonArrow color=\"#C0C0C0\" />\n      </p>\n      <p>\n        All classes\n        <ButtonArrow color=\"#C0C0C0\" />\n      </p>\n      <p>\n        <svg\n          width=\"11\"\n          height=\"10\"\n          viewBox=\"0 0 11 10\"\n          fill=\"none\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n        >\n          <path\n            d=\"M10.1666 1.27337L9.22659 0.333374L5.49992 4.06004L1.77325 0.333374L0.833252 1.27337L4.55992 5.00004L0.833252 8.72671L1.77325 9.66671L5.49992 5.94004L9.22659 9.66671L10.1666 8.72671L6.43992 5.00004L10.1666 1.27337Z\"\n            fill=\"#C0C0C0\"\n          />\n        </svg>\n        Clear all\n      </p>\n    </div>\n  );\n};\n","import React from 'react';\nimport './Header.scss';\nimport { MainHeader } from './MainHeader';\nimport { SubHeader } from './SubHeader';\n\nexport const Header = () => {\n  return (\n    <div className=\"header\">\n      <MainHeader />\n      <SubHeader />\n    </div>\n  );\n};\n","const URL = 'https://test-task-j.herokuapp.com/data';\n\nexport const getStudents = async (page: number, size: number) => {\n  const response = await fetch(\n    `${URL}?page=${page}&size=${size}`,\n  );\n\n  // eslint-disable-next-line no-console\n  console.log(response);\n\n  return response.json();\n};\n\nexport const getSortStudents = async (\n  page: number,\n  size: number,\n  category: string,\n  sortDir: number,\n) => {\n  const response = await fetch(\n    `${URL}?page=${page}&size=${size}&sortBy=${category}&sortDir=${sortDir}`,\n  );\n\n  return response.json();\n};\n\nexport const getSearchStudents = async (\n  page: number,\n  size: number,\n  search: string,\n) => {\n  const response = await fetch(\n    `${URL}?page=${page}&size=${size}&search=${search}`,\n  );\n\n  return response.json();\n};\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { getSearchStudents } from '../../../API/api';\nimport { SetStudentsActions } from '../../../store/actions';\nimport './HeaderTable.scss';\n\nexport const HeaderTable = () => {\n  const [search, setSearch] = useState('');\n  const dispatch = useDispatch();\n\n  return (\n    <>\n      <div className=\"headerTable\">\n        <h1 className=\"headerTable__title\">\n          Students\n        </h1>\n\n        <form\n          className=\"headerTable__search\"\n          onSubmit={(event) => {\n            event.preventDefault();\n            getSearchStudents(1, 10, search)\n              .then((response) => {\n                dispatch(SetStudentsActions(response.data));\n              });\n          }}\n        >\n          <input\n            type=\"text\"\n            className=\"headerTable__search-input\"\n            value={search}\n            placeholder=\"Enter Student Name, Parent or ID here\"\n            onChange={(event) => {\n              setSearch(event.target.value);\n            }}\n          />\n          <button\n            type=\"submit\"\n            className=\"headerTable__search-btn\"\n          >\n            <svg width=\"15\" height=\"27\" viewBox=\"0 0 12 12\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n              <path d=\"M8.33333 7.33333H7.80667L7.62 7.15333C8.27333 6.39333 8.66667 5.40667 8.66667 4.33333C8.66667 1.94 6.72667 0 4.33333 0C1.94 0 0 1.94 0 4.33333C0 6.72667 1.94 8.66667 4.33333 8.66667C5.40667 8.66667 6.39333 8.27333 7.15333 7.62L7.33333 7.80667V8.33333L10.6667 11.66L11.66 10.6667L8.33333 7.33333ZM4.33333 7.33333C2.67333 7.33333 1.33333 5.99333 1.33333 4.33333C1.33333 2.67333 2.67333 1.33333 4.33333 1.33333C5.99333 1.33333 7.33333 2.67333 7.33333 4.33333C7.33333 5.99333 5.99333 7.33333 4.33333 7.33333Z\" fill=\"#C0C0C0\" />\n            </svg>\n          </button>\n        </form>\n        <button\n          type=\"button\"\n          className=\"headerTable__export-button\"\n        >\n          <svg\n            width=\"10\"\n            height=\"12\"\n            viewBox=\"0 0 10 12\"\n            fill=\"none\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n          >\n            <path\n              d=\"M4.99992 0.5L0.333252 5.16667H2.99992V9.16667H6.99992V5.16667H9.66659L4.99992 0.5ZM5.66659 3.83333V7.83333H4.33325V3.83333H3.55325L4.99992 2.38667L6.44659 3.83333H5.66659ZM0.333252 10.5H9.66659V11.8333H0.333252V10.5Z\"\n              fill=\"#C0C0C0\"\n            />\n          </svg>\n          <p>Export csv</p>\n        </button>\n      </div>\n    </>\n  );\n};\n","import { State } from '../react-app-env.d';\n\nexport const getStudentsSelector = (state: State) => state.students;\n\nexport const getStudentInfoSelector = (state: State) => state.studentInfo;\n","import React from 'react';\nimport './StudentInfo.scss';\nimport { useSelector } from 'react-redux';\nimport { getStudentInfoSelector } from '../../../../store/selectors';\n\nexport const StudentInfo = () => {\n  const student = useSelector(getStudentInfoSelector);\n  // 60 198 24 20\n\n  return (\n    <div className=\"info\">\n      {student && (\n        <>\n          <div className=\"info__name\">\n            Student:\n            <strong>\n              {`  ${student.name}  `}\n            </strong>\n            id:\n            <strong>\n              {`  ${student.id} `}\n            </strong>\n          </div>\n          <div className=\"info__category\">\n            <select>\n              <option value=\"ALL CONCEPTS\">ALL CONCEPTS</option>\n            </select>\n            <select>\n              <option value=\"ALL SCORE\">ALL SCORE</option>\n            </select>\n            <select>\n              <option value=\"ALL SPEED\">ALL SPEED</option>\n            </select>\n            <input type=\"date\" className=\"info__calendar\"></input>\n            <hr className=\"info__hr\"></hr>\n          </div>\n          <div className=\"info__cheat-sheet\">\n\n          </div>\n          <table className=\"info__table\">\n\n          </table>\n        </>\n      )}\n    </div>\n  );\n};\n","import React from 'react';\n\nexport const ButtonArrowUpDown = () => (\n  <svg width=\"8\" height=\"12\" viewBox=\"0 0 8 12\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M4.00006 1.88667L6.1134 4L7.0534 3.06L4.00006 0L0.940063 3.06L1.88673 4L4.00006 1.88667ZM4.00006 10.1133L1.88673 8L0.94673 8.94L4.00006 12L7.06006 8.94L6.1134 8L4.00006 10.1133Z\" fill=\"#C0C0C0\" />\n  </svg>\n);\n","/* eslint-disable no-console */\nimport React, { useEffect, useState } from 'react';\n// import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getSortStudents, getStudents } from '../../../API/api';\nimport './Table.scss';\nimport { Student } from '../../../react-app-env.d';\nimport { ButtonArrow } from '../../ButtonArrow';\nimport { StudentInfo } from './StudentInfo';\nimport { getStudentInfoSelector, getStudentsSelector } from '../../../store/selectors';\nimport { setStudentActions, SetStudentsActions } from '../../../store/actions';\nimport { ButtonArrowUpDown } from '../../ButtonArrowUpDown';\n// import { setStudentActions } from '../../../store/actions';\n\nexport const Table = React.memo(() => {\n  const [openInfo, setOpenInfo] = useState(false);\n\n  const students = useSelector(getStudentsSelector);\n  const openedStudent = useSelector(getStudentInfoSelector);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    getStudents(1, 8)\n      .then((response) => {\n        dispatch(SetStudentsActions(response.data));\n      });\n  }, []);\n\n  const settingStudent = (studentObject: Student) => {\n    setOpenInfo(!openInfo);\n    dispatch(setStudentActions(studentObject));\n  };\n\n  const sortingStudent = (group: string) => {\n    getSortStudents(1, 10, group, 1)\n      .then(response => (\n        dispatch(setStudentActions(response.data))\n      ));\n  };\n\n  console.log(students);\n\n  return (\n    <>\n      <table className=\"table is-hoverable is-fullwidth\">\n        <thead>\n          <tr>\n            <td>\n              <input type=\"checkbox\"></input>\n            </td>\n            <td>\n              Name\n              <button\n                type=\"button\"\n                className=\"table__buttonArrow\"\n                onClick={() => (\n                  sortingStudent('name')\n                )}\n              >\n                <svg width=\"14\" height=\"14\" viewBox=\"0 0 14 14\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                  <path d=\"M8.95998 2.10666L7.38665 0.533325L5.81332 2.10666H8.95998ZM5.92665 10.82H7.15332L4.15998 3.17999H3.06665L0.0666504 10.82H1.29332L1.90665 9.18666H5.31332L5.92665 10.82ZM2.31332 8.09333L3.60665 4.63999L4.89998 8.09333H2.31332V8.09333ZM7.38665 13.4667L8.93998 11.9133H5.83332L7.38665 13.4667ZM13.44 4.02666V3.18666H7.90665V4.25333H11.8267L7.87998 9.95999V10.82H13.5667V9.75999H9.48665L13.44 4.02666Z\" fill=\"#C0C0C0\" />\n                </svg>\n              </button>\n            </td>\n            <td>\n              ID\n              <button\n                type=\"button\"\n                className=\"table__buttonArrow\"\n                onClick={() => (\n                  sortingStudent('id')\n                )}\n              >\n                <ButtonArrowUpDown />\n              </button>\n            </td>\n            <td>Class</td>\n            <td>\n              Av. Score, %\n              <button\n                type=\"button\"\n                className=\"table__buttonArrow\"\n                onClick={() => (\n                  sortingStudent('score')\n                )}\n              >\n                <ButtonArrowUpDown />\n              </button>\n            </td>\n            <td>\n              Av. Speed\n              <button\n                type=\"button\"\n                className=\"table__buttonArrow\"\n                onClick={() => (\n                  sortingStudent('speed')\n                )}\n              >\n                <ButtonArrowUpDown />\n              </button>\n            </td>\n            <td>Parents</td>\n          </tr>\n        </thead>\n        <tbody>\n          {students.map((student: Student) => (\n            <>\n              <tr key={student.id} className=\"table__item\">\n                <td>\n                  <input type=\"checkbox\"></input>\n                </td>\n                <td>\n                  {student.name}\n                </td>\n                <td>{student.id}</td>\n                <td>{student.class}</td>\n                <td>{student.score}</td>\n                <td>{student.speed}</td>\n                <td>\n                  <svg width=\"14\" height=\"14\" viewBox=\"0 0 14 14\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" className=\"table__info\">\n                    <path\n                      d=\"M6.33325 10.3334H7.66659V6.33337H6.33325V10.3334ZM6.99992 0.333374C3.31992 0.333374 0.333252 3.32004 0.333252 7.00004C0.333252 10.68 3.31992 13.6667 6.99992 13.6667C10.6799 13.6667 13.6666 10.68 13.6666 7.00004C13.6666 3.32004 10.6799 0.333374 6.99992 0.333374ZM6.99992 12.3334C4.05992 12.3334 1.66659 9.94004 1.66659 7.00004C1.66659 4.06004 4.05992 1.66671 6.99992 1.66671C9.93992 1.66671 12.3333 4.06004 12.3333 7.00004C12.3333 9.94004 9.93992 12.3334 6.99992 12.3334ZM6.33325 5.00004H7.66659V3.66671H6.33325V5.00004Z\"\n                      fill=\"#C0C0C0\"\n                    />\n                  </svg>\n                  {student.parents ? (\n                    `${student.parents[0]}, ${student.parents[1]}`\n                  ) : (\n                    'No parents added'\n                  )}\n                </td>\n                <td>\n                  <button\n                    type=\"button\"\n                    className=\"table__buttonArrow\"\n                    onClick={() => settingStudent(student)}\n                  >\n                    {openInfo && openedStudent && student.id === openedStudent.id ? (\n                      <svg width=\"10\" height=\"5\" viewBox=\"0 0 10 5\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                        <path d=\"M0 5L5 0L10 5H0Z\" fill=\"#5B5B5B\" />\n                      </svg>\n                    ) : (\n                      <ButtonArrow\n                        color=\"#C0C0C0\"\n                      />\n                    )}\n                  </button>\n                </td>\n              </tr>\n              {openInfo && openedStudent && student.id === openedStudent.id && (\n                <tr>\n                  <td colSpan={8} key={student.id}>\n                    <StudentInfo />\n                  </td>\n                </tr>\n              )}\n            </>\n          ))}\n        </tbody>\n      </table>\n      <div>\n        <h3 className=\"archive\">\n          Archived\n        </h3>\n        {/* archiveStudents? */}\n        <table>\n\n        </table>\n      </div>\n\n    </>\n  );\n});\n","import React from 'react';\nimport { HeaderTable } from './HeaderTable';\nimport { Table } from './Table';\n\nexport const Main = () => {\n  return (\n    <>\n      <HeaderTable />\n      <Table />\n    </>\n  );\n};\n","import React from 'react';\nimport './App.scss';\nimport { Header } from './components/Header';\nimport { Main } from './components/Main';\n\nexport const App: React.FC = () => {\n  return (\n    <div className=\"starter\">\n      <Header />\n      <Main />\n    </div>\n  );\n};\n","import { createStore } from 'redux';\nimport { State } from '../react-app-env.d';\nimport { Action, ActionType } from './actions';\n\nexport const initialState: State = {\n  students: [],\n  studentInfo: null,\n};\n\nconst reducer = (state = initialState, action: Action) => {\n  switch (action.type) {\n    case ActionType.SET_STUDENTS:\n      return {\n        ...state,\n        students: [...action.payload],\n      };\n\n    case ActionType.SET_STUDENTINFO:\n      return {\n        ...state,\n        studentInfo: action.payload,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const store = createStore(reducer);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { App } from './App';\nimport { store } from './store';\nimport 'bulma/css/bulma.min.css';\nimport './index.scss';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}